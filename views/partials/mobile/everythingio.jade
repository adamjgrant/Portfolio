h3 About the Project
p Everything is an active project currently underway. What you see here are preliminary designs.

p Computers organize your files. Everything.io organizes your physical possessions.

ul
	li Add time-sensitive food purchases with an alert linked to the expiration date.
	li See what you have turned on at home, turn off lights, receive alerts when a light has been on too long.
	li Add purchases you can write off, complete with receipt and deduction category.
	li Tag the clothes you loan out to friends with a custom label. Remind yourself to ask for it back with an alert, or automatically send an email reminder to your friend after a specified time span.
	li Your car can tell you when it's low on gas or needs an oil change. Find it on a map if it falls in the wrong hands.
	li With "if this, then that" rules, you could create a rule for your air conditioner to turn on if your connected fitness band detects a long run during a hot day.
	li Your purchases appear automatically in your list of belongings with a "delivery pending" label. Track them right from Everything. The label disappears as soon as delivery has been attempted.\
	li Analyze the nutrition of the contents of your pantry to determine just how healthy your purchases are.
h3 Design
.row
	img.img-responsive.col.col-sm-3.img-thumbnail(src="/img/eio_logo.png")
	.col.col-sm-9
		p My design goal with Everything.io was to make something very complex actually quite approachable. The open expanses of blue, soft, sans-serif typeface and the symmetrical logo complements the round and colorful icons to create a "right at home" feeling.
.clearfix
br
p
	img.img-responsive(src="/img/eio_live.png")
p I envisioned the mobile usage of EIO to be somewhere just under 100% so as of yet, I haven't even begun to think of the desktop version.
h3 Focusing
.row
	.col.col-md-6
		p There's a lot of potential for distraction with all the things going on in the application, so I wanted to make sure there were just a few actionable items on the screen at any one time, and in similar locations from page to page.
		p Most of the conventions I used are derived from established UI patterns from iOS and iOS applications. For example, the top left and right areas get the user back and forward (when appended with chevrons) through menus in detail view. When drilled out of detail view, they are taken back to the home page, resembling the home screen of an iPhone.
	img.img-responsive.col.col-md-6.img-thumbnail(src="/img/eio_kitchen.png")
.clearfix
br
h3 Fast performance
.row
	.col.col-md-6
		p I hate waiting and I didn't want to send users to blank screens in between one page refreshing and the other. Angular.js was the most logical solution for me and, of course, Kickstrap 2.
		p With Kickstrap 2's integrated functionality with Firebae.io, users also don't need to pull down or press a button to refresh their data. All data is hooked up with Websockets and is therefore real-time.
		p The code is designed to be extremely reusable, using html partials compiled in Jade or served by Angular. Each of the countless views is generated by one of about 4 different view templates. Using this kind of strategy isn't just good for keeping code tidy--it maintains a consistent experience for the user.
	img.img-responsive.col.col-md-6.img-thumbnail(src="/img/eio_rooms.png")
.clearfix
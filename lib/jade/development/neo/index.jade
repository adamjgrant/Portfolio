extends ../../_page

block page-content
  div(class="render" data-page-id="350")
  +img('ne-lean-ux', 'right')
  :markdown
    After my time at Ipreo, evangelizing the promises of Lean User Experience,
    I decided to chase down the people who were literally writing the books on it.

    Neo began as a consultancy based heavily on the principles of Eric Ries
    (a founder of the company) and his book The Lean Startup as well as Lean UX by
    Jeff Gothelf and Joshua Seiden (also at the company).

    At Neo, we helped large companies to innovate by organizing small, colocated,
    cross-functional teams within the company. Essentially, these were startups
    inside a corporation.

    My official role at Neo was as a Designer, however I greatly shared this role
    with full stack development.

  .clearfix 

  +img('ne-table', 'snug')

  :markdown
    At Neo, I was happily shuffling between pairing on full stack Rails applications,
    whiteboarding with product managers, and meeting face-to-face with clients to
    evolve the product.

    Neo doesn't like to think of itself as a dev shop, and rightly so. Per Lean methodology,
    our goal was to fail fast, iterate, pivot and kill where needed, and evolve a product based on
    learnings along the way.

  +img('ne-little-bits', 'snug')

  :markdown
    Each day oscillated between sketching out a user's journey, testing prototypes with real people,
    implementing/creating high fidelity designs, and building a full stack application.

  +img('ne-lunch', 'snug')

  :markdown
    ## AskAlexis

    One of our more well-known projects was executed by myself and my colleague Nicole.

    [AskAlexis](http://askalexis.io) is an SMS-based service primarily used by men where
    the "Alexis" personality answers questions about dating, romance, grooming, etc.

    Using Rails and my own CSS library, [Kickstart](/development/kickstart), we quickly
    built a single landing page with the invitation to sign up with just a phone number.

  +img('ne-ask-alexis', 'snug')
  +img('aa_new_screenshot', 'snug')
  p
    em (Above) AskAlexis, early homepage screenshot, (below) AskAlexis, latest homepage screenshot.

  :markdown
    Meanwhile, I set to work quickly building a makeshift backend where we could organize
    and respond to messages coming in.

    Usually we roll this sort of thing out to a few users, just to get a bit of learning
    before investing too much work into it.

    **We hadn't anticipated on it going viral.**

  +img('ne-hacker-news', 'snug')
  :markdown
    *On the day we launched, AskAlexis blasted its way to the front page of HackerNews, 
    ProductHunt, and a week later in a top story on [CNet](http://www.cnet.com/news/sms-based-apps/).*

    Needless to say, we got to work. Nicole and I broke a sweat engaging users through lunch,
    the workday, late into the night and on weekends, just to keep our momentum going.

    Interestingly, by keeping our initial product very light and flexible, I was able to integrate
    features concurrently to our discovering we needed them.

    In the first 24 hours, we learned that we were saying the same things to a lot of people
    when starting conversations. I wrote some quick throwaway JavaScript that let us choose
      from a list of canned responses to send off to users.

  +img('ne-interface', 'snug')

  :markdown
    We also learned a lot of users were asking questions that could easily be answered on Yelp.
    I added a single text box that took a location string. Pressing enter took us immediately
    to dining results in that area on Yelp. Taking out just a few steps made our workflow
    surprisingly efficient.

    The flexibility of reusable components from ReactJS let me make chunks of the interface
    and repeat them throughout (e.g. multiple Canned Response buttons). Rails's easy 
    migrations and database manipulation allowed us to move conversations through different
    states, much the same way you might organize your email inbox.

    At the time of this writing, there's not much more to say on Alexis. We've recently hired
    some staff members to give Nicole and I a break and we're looking forward to seeing
    where it goes.
